const.searchStr=searchStr
const.booking.orders_ids=order_ids
const.order_state.room_ids=room_ids

bookings_table="bookings"
bookings.id=id
bookings.start_date=start_date
bookings.end_date=end_date
bookings.price=price
bookings.period_price=period_price
bookings.is_canceled=is_canceled
bookings.is_edited=is_edited
bookings.comment=comment
bookings.old_booking_id=old_booking
bookings.room_type_id=room_type_id
bookings.order_id=order_id


sql.insert.bookings=insert into ${bookings_table} (${bookings.start_date}, ${bookings.end_date}, \
    ${bookings.price}, ${bookings.period_price}, ${bookings.is_canceled}, ${bookings.is_edited}, \
    ${bookings.comment}, ${bookings.old_booking_id}, ${bookings.room_type_id}, ${bookings.order_id} ) \
   values (:${bookings.start_date}, :${bookings.end_date}, \
    :${bookings.price}::float8::numeric::money, :${bookings.period_price}::float8::numeric::money, :${bookings.is_canceled}, :${bookings.is_edited}, \
    :${bookings.comment}, :${bookings.old_booking_id}, :${bookings.room_type_id}, :${bookings.order_id} ) RETURNING id

sql.select.bookingsById=select * from ${bookings_table} where ${bookings.id} = :${bookings.id}

sql.select.bookingByOldBookingId=select * \
   from ${bookings_table} where ${bookings.old_booking_id} =  :${bookings.old_booking_id}

sql.select.bookingByRoomTypeId=select * \
   from ${bookings_table} where ${bookings.room_type_id} =  :${bookings.room_type_id}

sql.select.bookingByOrderId=select * \
   from ${bookings_table} where ${bookings.order_id} =  :${bookings.order_id}

sql.select.bookings=select ${bookings.start_date}, ${bookings.end_date}, \
    ${bookings.price}, ${bookings.period_price}, ${bookings.is_canceled}, ${bookings.is_edited}, \
    ${bookings.comment}, ${bookings.old_booking_id}, ${bookings.room_type_id}, ${bookings.order_id}  \
  from ${bookings_table}

sql.select.amount_of_booked_for_room_type_on_date_span=select count(${bookings.id}) from ${bookings_table} where \
${bookings.room_type_id} = :${bookings.room_type_id} and (:${bookings.start_date}::date <= ${bookings.end_date} and \
  :${bookings.end_date}::date > ${bookings.start_date})

sql.select.bookingsByOrdersId=select * from ${bookings_table} where ${bookings.order_id} IN ( :${const.booking.orders_ids} )